from __future__ import annotations
import json
import sys
from typing import Any
import dateutil.parser


messages: list[dict[str, Any]]
messages = [json.loads(line) for line in sys.stdin]


def format_percent(n: int) -> str:
    total = len(messages)
    percent = round(n / total * 100)
    return f'{n:02}/{total} ({percent:02}%)'


def show_percent(title: str, field: str | int):
    if isinstance(field, str):
        count = sum(bool(m[field]) for m in messages)
    else:
        count = field
    print(f'{title:30}: {format_percent(count)}')


show_percent('Autogenerated', 'autogenerated')
show_percent('Has my name in the message', 'has_name')
show_percent('Read my CV', 'read_cv')
show_percent('Has salary range', 'salary_high')
show_percent('Has company name', 'company')
show_percent('Has emojis', 'has_emoji')
show_percent('Has email', 'has_email')
show_percent('Has a link', 'has_url')
show_percent('Has word "Python"', 'python')

dates = [dateutil.parser.parse(m['date']).date() for m in messages]
weekends = sum(d.weekday() >= 5 for d in dates)
show_percent('Send on weekend', weekends)

times = [dateutil.parser.parse(m['time']).time() for m in messages]
workhours = sum(8 <= t.hour <= 17 for t in times)
show_percent('Send during working hours', workhours)

times = [dateutil.parser.parse(m['time']).time() for m in messages]
repeated = len(messages) - len({m['sender_name'] for m in messages})
show_percent('Duplicate messages', repeated)

avg_size = sum(m['chars'] for m in messages) / len(messages)
title = 'Average message size'
print(f'{title:30}: {round(avg_size)} chars')
